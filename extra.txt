const buildKeyValueStore = async function (emailOfUser) {
    let fileContent = JSON.parse(fs.readFileSync("./emails_aug_4.json"));
    let receivers = [];
    let sender = "";
    let time = 0;
    let hash_of_string = "";
    let senders_map = {};
    for (let i = 0; i < fileContent.length; i++) {
        // get the list of addresses
        addresses = fileContent[i].addresses;
        // there is only one sender, that is what I am assuming here unless changed
        sender = "";
        // can be multiple receivers, unless something changes
        receivers = [];
        // get the time stamp
        time = fileContent[i].time;
        // Extract the receivers and the senders
        addresses.forEach(person => {
            if (person.role == "sender") {
                sender = person.address;
                if(!senders_map.hasOwnProperty(sender)){
                    senders_map[sender] = 1
                }else{
                    senders_map[sender] +=1
                }
            } else {
                receivers.push(person.address);
            }
        });
        // make hash(sender_receiver) map for all times
        receivers.forEach(receiver => {
            string_to_hash = sender + receiver
            console.log("-->", string_to_hash)
            // hash the string
            const md5Hasher = crypto.createHmac("md5", md5Secret);
            hash_of_string = md5Hasher.update(string_to_hash).digest("hex");
            // console.log("Hash and string:", hash_of_string)
            if (emailTimeStampMap.hasOwnProperty(hash_of_string)) {
                // console.log("Map value for ", hash_of_string, emailTimeStampMap[hash_of_string])
                emailTimeStampMap[hash_of_string].push(time)
            } else {
                emailTimeStampMap[hash_of_string] = [time];
            }
        })
    }

    // write the parsed data to the file to be processed by schema for multiple entry input
    for (let [key, value] of Object.entries(emailTimeStampMap)) {
        emailTimeStampArrayObj.push({ key: key, times: value })
    }
    fs.writeFileSync("./emailTimeStampArrayObj.json", JSON.stringify(emailTimeStampArrayObj));
    console.log(senders_map, "\n", Object.keys(senders_map),Object.keys(senders_map).length)
}